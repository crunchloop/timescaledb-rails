#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'

require 'irb'
require 'rails'
require 'active_record'
require 'timescaledb/rails'
require 'timescaledb/rails/models'

ActiveRecord::Base.establish_connection(ENV.fetch('DATABASE_URL', 'postgres://postgres:postgres@127.0.0.1/timescaledb-rails_test'))

# Extends ActiveRecord with timescaledb support
Timescaledb::Rails.load

# Build hypertables for Active Record models on the fly
Timescaledb::Rails::Hypertable.all.each do |hypertable|
  class_name = hypertable.hypertable_name.singularize.camelize

  puts "Defining hypertable model => `Timescaledb::Rails::#{class_name}`"

  Timescaledb::Rails.const_set(
    class_name,
    Class.new(ActiveRecord::Base) do
      include Timescaledb::Rails::Model

      self.table_name = [hypertable.hypertable_schema, hypertable.hypertable_name].join('.')
    end
  )
end

IRB.conf[:PROMPT_MODE] = :SIMPLE

IRB.start
